#!/bin/sh

if [ "$#" -lt 4 ]; then
   echo "Error!: usage $0 cluster_name aws_account region_name num_worker_nodes"
   exit 1
fi

cluster_name=$1
account=$2
region=$3
node=$4

echo "Creating cluster $cluster_name with AWS Account $account in region $region"
echo "are you sure? (y/n)"
read opt

if [ "$opt" != "Y" ] && [ "$opt" != "y" ]; then
    echo "Great!"
    exit 1
fi

./eksctl create cluster --name $cluster_name --region $region --nodegroup-name g1 --node-type t2.micro --nodes $node
oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
echo "Your OIDC key $oidc_id"
./eksctl utils associate-iam-oidc-provider --cluster $cluster_name --approve

echo "Applying IAM Policy"
curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json
aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json

./eksctl create iamserviceaccount \
  --cluster=$cluster_name \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name AmazonEKSLoadBalancerControllerRole \
  --attach-policy-arn=arn:aws:iam::$account:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve \
  --override-existing-serviceaccounts

role_name="AmazonEKS_EFS_CSI_DriverRole"
./eksctl create iamserviceaccount \
    --name efs-csi-controller-sa \
    --namespace kube-system \
    --cluster $cluster_name \
    --role-name $role_name \
    --role-only \
    --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy \
    --approve
    --override-existing-serviceaccounts

TRUST_POLICY=$(aws iam get-role --role-name $role_name --query 'Role.AssumeRolePolicyDocument' | \
    sed -e 's/efs-csi-controller-sa/efs-csi-*/' -e 's/StringEquals/StringLike/')
aws iam update-assume-role-policy --role-name $role_name --policy-document "$TRUST_POLICY"



echo "Updating helm charts"
./helm repo add eks https://aws.github.io/eks-charts
./helm repo update eks

echo "Installing aws-load-balancer-controller with helm"
./helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  -n kube-system \
  --set clusterName=$cluster_name \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=$region

echo "Invoking tech stack"
kubectl apply -f .
